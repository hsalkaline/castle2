import {
    getPlayerPath,
    error
} from 'stateUtils';
import logger from 'service/logger';

import {
    gameStart,
    roundBegin,
    roundEnd
} from 'reducers/game';

import {
    transferGold,
    transferResourcesExact
} from 'reducers/common';

import {
    playCard,
    processCards
} from 'reducers/cards';

var reducer = (state, action) => {
    if (action.type != 'GAME_START' && !state.get('gameStarted')) {
        return error(state, {
            action,
            error: 'game must be started first!'
        });
    }
    
    if (state.get('gameEnded')) {
        return error(state, {
            action,
            error: 'game over!'
        });
    }
    
    switch (action.type) {
    case 'GAME_START': {
        return gameStart(state, action.players);
    }
        
    case 'ROUND_BEGIN': {
        return roundBegin(state);
    }
        
    case 'PLAY_CARD': {
        return playCard(state, action.player, action.card);
    }

    case 'CARDS_RESOLUTION': {
        return processCards(state);
    }

    case 'ROUND_END': {
        return roundEnd(state);
    }
        
    case 'GAME_END': { 
        return state.set('gameEnded', true);
    }
        
    default: return state;
    }
};

export { reducer };
