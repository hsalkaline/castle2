const getPlayerPath = (state, player) => {
          const index = state.get('players').findIndex(item => item.get('color') == player);
          
          if (index == -1) {
              throw 'incorrect player color';
          }
          
          return ['players', index];
      },
      error = (state, error) => {
          return state.set('error', error);
      },
      playersSequence = (currentPlayer, players) => {
          var len = players.length,
              index =  players.indexOf(currentPlayer),
              result = [];

          for (let i = index; i < len + index; i++) {
              result.push(players[i % len]);
          }

          return result;
      },
      cardsInOrder = ({cards, cardType, currentPlayer, players}) => {
          const sequence = playersSequence(currentPlayer, players);
          
          return cards
              .filter(x => x.get('card') == cardType)
              .sort((a, b) => {
                  return sequence.indexOf(a.get('color')) - sequence.indexOf(b.get('color'));
              });
      };

export {
    getPlayerPath,
    error,
    cardsInOrder
}
